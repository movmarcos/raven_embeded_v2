CREATE PROCEDURE IF NOT EXISTS RAVEN.LIST_UPLOAD_FILE("COBID" VARCHAR(16777216), "ON_PREM_ENVIRONMENT" VARCHAR(16777216))
RETURNS VARIANT
LANGUAGE JAVASCRIPT
EXECUTE AS OWNER
AS $$
	var return_json = {};
	var return_rows = [];

	var cmd = `WITH SOURCE_FILE AS (
        SELECT 
            SOURCE_SYSTEM_CODE,
            SOURCE_FEED_CODE,
            LISTAGG(
                IFF(REPLACE(VALUE, ':ENVIRONMENT:', SPLIT_PART(:2,'_',1)) LIKE ':%:', 
                    TO_CHAR(TO_DATE(:1,'YYYYMMDD'),REPLACE(VALUE,':','')), 
                    REPLACE(VALUE, ':ENVIRONMENT:', SPLIT_PART(LOWER(:2),'_',1))), 
                '') WITHIN GROUP (ORDER BY INDEX ASC) AS SOURCE_FILE_PATH
        FROM RAVEN.METADATA_SOURCE_FILE SPLITTABLE, LATERAL STRTOK_SPLIT_TO_TABLE(SPLITTABLE.SOURCE_FILE_PATH, '|')
        WHERE IS_ENABLED = TRUE
        GROUP BY SOURCE_SYSTEM_CODE, SOURCE_FEED_CODE
    )
    ,FILE_DETAIL AS(
        SELECT 
            SF.SOURCE_FILE_PATH,
            SP.FILE_NAME_COB    AS FILE_NAME,
            SP.FOLDER_PATH_COB  AS DESTINATION_FILE_PATH
        FROM SOURCE_FILE SF
        INNER JOIN RAVEN.VW_METADATA_STAGE_ME_PARAMETERS_COB SP
            ON SF.SOURCE_SYSTEM_CODE = SP.SOURCE_SYSTEM_CODE 
            AND SF.SOURCE_FEED_CODE = SP.SOURCE_FEED_CODE
        WHERE SP.RAVEN_COBID = :1
    )
	SELECT DISTINCT 
	TO_JSON(OBJECT_CONSTRUCT(
		'SOURCE_FILE_PATH', SOURCE_FILE_PATH,
		'DESTINATION_FILE_PATH', DESTINATION_FILE_PATH,
		'FILE_LIST', ARRAY_AGG(FILE_NAME)  WITHIN GROUP (ORDER BY FILE_NAME ASC)
	))::VARIANT AS FILE_LIST
	FROM FILE_DETAIL
	GROUP BY SOURCE_FILE_PATH, DESTINATION_FILE_PATH
		`
		
	var resFileDetail = snowflake.execute({
		sqlText: cmd,
		binds:[COBID, ON_PREM_ENVIRONMENT]
		});

	while (resFileDetail.next()) {
	   	var objList = {
	   		"FILE_DETAIL": resFileDetail.getColumnValue("FILE_LIST"),
	   		"COBID": COBID,
	   		"ON_PREM_ENVIRONMENT": ON_PREM_ENVIRONMENT
	   	}
	    return_rows.push(objList);
	};
	
	return_json["list_return"] = return_rows;
	
	return return_json;

$$;
