CREATE OR REPLACE VIEW RAVEN.VW_LOG_UNSTAGED_FILES AS
WITH LIST_EXT_FILE AS ( 
SELECT RAVEN_COBID
      ,STAGE_NAME
      ,STAGE_URL
      ,CASE WHEN STAGE_URL LIKE '%azure%' 
      		THEN 
	      		CASE WHEN LEFT(CURRENT_DATABASE(),4) = 'PROD'
	      			THEN SPLIT_PART(STAGE_URL,'/',-1)
	      			ELSE REPLACE(SPLIT_PART(STAGE_URL,'/',-1), SPLIT_PART(SPLIT_PART(STAGE_URL,'/',-1),'-',1)||'-','')
	      		END
	      	ELSE ''
       END CONTAINER_NAME
      ,FOLDER_PATTERN
      ,FILE_EXTENSION
 	  ,PROCESS_TIMESTAMP
 	  ,VALUE:name::VARCHAR  FILE_URL
 	  ,REPLACE(VALUE:name::VARCHAR,STAGE_URL,'')  EXTERNAL_FILE_PATH
 	  ,SPLIT_PART(REPLACE(VALUE:name::VARCHAR,STAGE_URL,''),'/',-1) FILE_NAME
	  ,to_timestamp_ntz(VALUE:last_modified::STRING, 'DY, DD MON YYYY HH24:MI:SS GMT') 	AS BLOB_LAST_MODIFIED
  FROM RAVEN.LOG_LIST_EXTERNAL_FILE L, LATERAL flatten(input => L.FILE_LIST)
 WHERE FLAG_LAST_VERSION = TRUE
)
SELECT L.RAVEN_COBID
      ,L.STAGE_NAME
      ,L.CONTAINER_NAME
 	  ,REPLACE(L.EXTERNAL_FILE_PATH, L.FILE_NAME,'') FOLDER_PATH
 	  ,L.FILE_NAME
      ,L.FOLDER_PATTERN
      ,L.FILE_EXTENSION
      ,L.STAGE_URL
 	  ,L.EXTERNAL_FILE_PATH
 	  ,L.PROCESS_TIMESTAMP
 	  ,L.BLOB_LAST_MODIFIED
	  ,REPLACE(FOLDER_PATH,'/','_') || SPLIT_PART(L.FILE_NAME,'.',1) || L.RAVEN_COBID AS TAKS_NAME
  FROM LIST_EXT_FILE L
 INNER JOIN RAVEN.VW_METADATA_STAGE_ME_PARAMETERS_COB P ON L.RAVEN_COBID = P.RAVEN_COBID
 				  									   AND L.STAGE_NAME = P.STAGE_NAME
 				                                       AND REPLACE(L.EXTERNAL_FILE_PATH,'/','') = REPLACE(P.FOLDER_PATH_COB || P.FILE_NAME,'/','')
 				                                       AND L.FILE_EXTENSION = P.FILE_EXTENSION								  
 WHERE NOT EXISTS (SELECT 1 
  				     FROM RAVEN.LOG_STAGE_ME_STATUS S 
  				 	 WHERE REPLACE(S.PROCESS_PARAMETERS:"file_stage_me"::VARCHAR,'/','') = REPLACE(L.EXTERNAL_FILE_PATH,'/','')
         			   AND S.PROCESS_PARAMETERS:"container_name"::VARCHAR = L.CONTAINER_NAME
					   AND S.START_TIMESTAMP > L.BLOB_LAST_MODIFIED
  				   	   AND S.PROCESS_STATUS <> 'FAILED') -- REMOVE ALL SUCCESS PROCESS
   AND NOT EXISTS (
		SELECT 1
	      FROM RAVEN.LOG_STAGE_ME_STATUS SS
       WHERE REPLACE(SS.PROCESS_PARAMETERS:"file_stage_me"::VARCHAR,'/','') = REPLACE(L.EXTERNAL_FILE_PATH,'/','')
         AND SS.PROCESS_PARAMETERS:"container_name"::VARCHAR = L.CONTAINER_NAME
         AND SS.PROCESS_STATUS = 'FAILED'
         AND (ss.PROCESS_RESULT:"exception"::VARCHAR LIKE '%There is no metadata for the folder/file%'
              OR ss.PROCESS_RESULT:"exception"::VARCHAR LIKE '%Object%does not exist or not authorized%'
              OR ss.PROCESS_RESULT:"exception"::VARCHAR LIKE '%SQL compilation error%')
        ) -- REMOVE ALL FAILED BECAUSE THERE ISN'T METADATA OR TABLE DESTINATION IS NOT CREATED
   AND TIMESTAMPADD(MINUTE, 30, L.BLOB_LAST_MODIFIED) < CURRENT_TIMESTAMP();
